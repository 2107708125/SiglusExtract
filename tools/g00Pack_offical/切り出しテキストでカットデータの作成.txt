切り出しテキストでカットデータの作成

「切り出しテキスト」によるコンバートは、ＢＭＰ画像とＰＳＤ画像の両方に対応しています。
同じファイル名で拡張子が [.txt] のファイルがあれば「切り出しデータ」として変換します。

	例）grp000.bmp (grp000.psd) なら grp00.txt

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
■「切り出し」とは

	「切り出し」とは、画像コンバート時に、複数の矩形に切り出す事です。
	通常コンバートの場合は、単純に１枚絵のデータが作成されますが、
	切り出しコンバートの場合は、切り出された複数のデータが連結しているデータとして作成されます。
	例えば、ロールプレイングゲームで使用するようなチビキャラクタの歩きパターンをパターンごとに
	切り出すような感じだと考えて下さい。

	「切り出しデータ」は、オブジェクトシステム用に特化した形式です。
	旧来のバンクシステムでも画像を問題なく読み込む事はできますが、切り出しておく意味がありません。

	≪注意点≫
		レイヤー切り出しは、全ての切り出しを「レイヤーのサイズ」で切り出します。
		※サイズの違う切り出しをする場合は、≪切り出しテキスト≫ の方法でしかできません。

	≪切り出しレイヤー≫
		ＰＳＤ画像なら、レイヤーを利用した切り出しが行えます。
		どちらが適切な方法なのかは、画像の取り扱い方によります。
		「切り出しレイヤーでカットデータの作成.txt」もご一読ください。
		※１つの画像に対して「切り出しレイヤー」と「切り出しテキスト」を併用する事はできません。

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
■中心座標命令

	切り出した画像の中心を指定する命令です。

	Ｇ００データには、中心座標を設定する事が出来ます。
	中心の使用目的は、アイデア次第です。
	例えば、ロールプレイングゲーム等のキャラクター表示順位で、Ｙ軸が大きい（下にあるほど）、手前に表示するとします。
	この際、Ｙ軸制御は、システムが担当しますので、何も考えなくても、表示順位の制御はうまくいきます。
	しかし、これには１つ条件があり、オブジェクトの中心が、キャラクタの足元にあることが前提となるのです。
	このような場合、中心座標をキャラクタの足元に来るように設定しなければなりません。

───────────────────────────────────────────
#CENTERMOD  Xmod Ymod
#CENTERMODX Xmod
#CENTERMODY Ymod

	中心モードの設定

	Xmod(Ymod):モード

		0 = 切り出し座標の 上(左)の座標を中心にする（デフォルト）
		1 = 切り出し座標の 下(右)の座標を中心にする

		2 = 切り出し座標の 上下(左右)の中間座標を中心にする

		3 = 切り出し座標の 上(左)から下(右)にpos分修正した座標を中心にする（posは #CENTERPOS で設定）
		4 = 切り出し座標の 下(右)から上(左)にpos分修正した座標を中心にする（posは #CENTERPOS で設定）

		5 = 切り出し座標の 中心から下(右)に　pos分修正した座標を中心にする（posは #CENTERPOS で設定）
		6 = 切り出し座標の 中心から上(左)に　pos分修正した座標を中心にする（posは #CENTERPOS で設定）

		7 = 指定座標を中心にする（座標は #CENTERPOS で設定）

───────────────────────────────────────────
#CENTERPOS  Xpos Ypos
#CENTERPOSX Xpos
#CENTERPOSY Ypos

	中心座標の設定（上記、中心モードが 3 4 5 6 7 で使用する座標）

	中心座標のデフォルト値は、(0, 0)です。

	１度設定した「中心モード」と「中心座標」は以後の切り出しで適用され続けます。
	また、切り出しの途中で、何度でも変更する事ができます。

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
■切り出し命令

	画像を切り出す命令です。

───────────────────────────────────────────
#BOXCUT sx, sy, ex, ey

	切り出し矩形を始点座標／終点座標で指定

	#BOXCUT    100,100,  199,199

		始点(100,100)／終点(199,199)の矩形を切り出す

───────────────────────────────────────────
#RECTCUT x, y, xl, yl

	切り出し矩形を始点座標／横縦サイズで指定

	#RECTCUT   100,100,  200,200

		始点(100,100)／横縦サイズ(200,200)の矩形を切り出す

───────────────────────────────────────────
#RECTCUT_YOKO x, y, xl, yl, xcnt, ycnt

	横方向、連続切り出し

	#RECTCUT_YOKO   0,0,  32,32,  10,2

		始点(0,0)から横縦サイズ(32,32)で横縦回数(10,2)で切り出す
		合計で２０個切り出されます。
		切り出しデータが横を基準に並んでいる場合に使用

			データの並び
				■■■■■■■■■■
				■■■■■■■■■■

			データの切り出し順番
				０１２３４５６７８９
				10111213141516171819

───────────────────────────────────────────
#RECTCUT_TATE x, y, xl, yl, ycnt, xcnt

	縦方向、連続切り出し

	#RECTCUT_TATE   0,0,  32,32,  5,2

		始点(0,0)から横縦サイズ(32,32)で縦横回数(5,2)で切り出す
		合計で１０個切り出されます。
		切り出しデータが縦を基準に並んでいる場合に使用

			データの並び
				■■
				■■
				■■
				■■
				■■

			データの切り出し順番
				０５
				１６
				２７
				３８
				４９

───────────────────────────────────────────
#KINNTOUCUT_YOKO xcnt, ycnt

	横方向、均等割り、連続切り出し

	#KINNTOUCUT_YOKO   5,2

		画像サイズを横縦回数(5,2)で均等割りして切り出す
		合計で１０個切り出されます。
		切り出しデータが横を基準に並んでいる場合に使用

			データの並び
				■■■■■
				■■■■■

			データの切り出し順番
				０１２３４
				５６７８９

		※画像サイズが均等割できない場合は、エラーになります。

───────────────────────────────────────────
#KINNTOUCUT_TATE ycnt, xcnt

	縦方向、均等割り、連続切り出し

	#KINNTOUCUT_TATE   5,2

		画像サイズを縦横回数(5,2)で均等割りして切り出す
		合計で１０個切り出されます。
		切り出しデータが縦を基準に並んでいる場合に使用

			データの並び
				■■
				■■
				■■
				■■
				■■

			データの切り出し順番
				０５
				１６
				２７
				３８
				４９

		※画像サイズが均等割できない場合は、エラーになります。

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
≪使用例≫
───────────────────────────────────────────

	いくつ命令が定義されていても良いです。
	上から順番に指定通りに切り出していきます。

		#RECTCUT      0,0,  200,200		// １つ目：(  0,0)-(199,199)の矩形
		#RECTCUT    200,0,  200,200		// ２つ目：(200,0)-(199,199)の矩形
		#RECTCUT    400,0,  200,200		// ３つ目：(400,0)-(199,199)の矩形
		#RECTCUT    600,0,  200,200		// ４つ目：(600,0)-(199,199)の矩形

	下の命令１つでも同じ動作になります。

		#RECTCUT_YOKO   0,0,  200,200,  4,1

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
≪注意点≫
───────────────────────────────────────────

	同じ切り出し情報で２度切り出した場合、切り出し情報的には、ちゃんと切り出したように扱われますが、
	実際には、データの無駄を無くすために、画像自体の切り出しは行っていません。
	同じデータなので、前に切り出したデータを参照するようにしています。

	そのため、同じ切り出し情報で、中心座標だけを変更するような切り出しができません。
	（★同じ中心座標なら、同じ切り出しは可能ですので、誤解しないで下さい。）

	下記が問題となる例です。

	２回目の切り出しの前に、中心座標を変更していますが、１回目と同じ情報として扱われます。
	どうしても切り出したい場合は、１枚のＢＭＰ上に同じ絵を２つ用意して、それぞれを切り出してください。
	同じ画像が２つデータ化されるので、無駄になりますが、現在は対処できていません。

		;;中心を左上から(16, 16)の座標にする
		#CENTERMOD  3 3
		#CENTERPOS  16 16

		;;(0, 0)の座標からサイズ(212, 212)で切り出す
		#RECTCUT   0,0,  212, 212			;;１回目

		;;中心変更（中心を右下から(16, 16)の座標にする）
		#CENTERMOD  4 4
		#CENTERPOS  16 16

		;;１回目と同じサイズで切り出す（(0, 0)の座標からサイズ(212, 212)で切り出す）
		#RECTCUT   0,0,  212, 212			;;２回目

